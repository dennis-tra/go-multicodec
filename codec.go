// Code generated by go generate; DO NOT EDIT.
package multicodec

// Codec serves the purpose of type safety when passing around codecs
type Codec uint64

// These are multicodec-packed content types.
const (
	// multihash: raw binary
	Identity Codec = 0x00 // identity
	// ipld: CIDv1
	Cidv1 Codec = 0x01 // cidv1
	// ipld: CIDv2
	Cidv2 Codec = 0x02 // cidv2
	// ipld: CIDv3
	Cidv3 Codec = 0x03 // cidv3
	// multiaddr
	Ip4 Codec = 0x04 // ip4
	// multiaddr
	Tcp Codec = 0x06 // tcp
	// multihash
	Sha1 Codec = 0x11 // sha1
	// multihash
	Sha2_256 Codec = 0x12 // sha2-256
	// multihash
	Sha2_512 Codec = 0x13 // sha2-512
	// multihash
	Sha3_512 Codec = 0x14 // sha3-512
	// multihash
	Sha3_384 Codec = 0x15 // sha3-384
	// multihash
	Sha3_256 Codec = 0x16 // sha3-256
	// multihash
	Sha3_224 Codec = 0x17 // sha3-224
	// multihash
	Shake_128 Codec = 0x18 // shake-128
	// multihash
	Shake_256 Codec = 0x19 // shake-256
	// multihash: keccak has variable output length. The number specifies the core length
	Keccak_224 Codec = 0x1a // keccak-224
	// multihash
	Keccak_256 Codec = 0x1b // keccak-256
	// multihash
	Keccak_384 Codec = 0x1c // keccak-384
	// multihash
	Keccak_512 Codec = 0x1d // keccak-512
	// multihash: BLAKE3 has a default 32 byte output length. The maximum length is (2^64)-1 bytes.
	Blake3 Codec = 0x1e // blake3
	// multiaddr
	Dccp Codec = 0x21 // dccp
	// multihash
	Murmur3_128 Codec = 0x22 // murmur3-128
	// multihash
	Murmur3_32 Codec = 0x23 // murmur3-32
	// multiaddr
	Ip6 Codec = 0x29 // ip6
	// multiaddr
	Ip6zone Codec = 0x2a // ip6zone
	// namespace: Namespace for string paths. Corresponds to `/` in ASCII.
	Path Codec = 0x2f // path
	// multiformat
	Multicodec Codec = 0x30 // multicodec
	// multiformat
	Multihash Codec = 0x31 // multihash
	// multiformat
	Multiaddr Codec = 0x32 // multiaddr
	// multiformat
	Multibase Codec = 0x33 // multibase
	// multiaddr
	Dns Codec = 0x35 // dns
	// multiaddr
	Dns4 Codec = 0x36 // dns4
	// multiaddr
	Dns6 Codec = 0x37 // dns6
	// multiaddr
	Dnsaddr Codec = 0x38 // dnsaddr
	// serialization: Protocol Buffers
	Protobuf Codec = 0x50 // protobuf
	// serialization: CBOR
	Cbor Codec = 0x51 // cbor
	// ipld: raw binary
	Raw Codec = 0x55 // raw
	// multihash
	Dbl_Sha2_256 Codec = 0x56 // dbl-sha2-256
	// serialization: recursive length prefix
	Rlp Codec = 0x60 // rlp
	// serialization: bencode
	Bencode Codec = 0x63 // bencode
	// ipld: MerkleDAG protobuf
	Dag_Pb Codec = 0x70 // dag-pb
	// ipld: MerkleDAG cbor
	Dag_Cbor Codec = 0x71 // dag-cbor
	// ipld: Libp2p Public Key
	Libp2p_Key Codec = 0x72 // libp2p-key
	// ipld: Raw Git object
	Git_Raw Codec = 0x78 // git-raw
	// ipld: Torrent file info field (bencoded)
	Torrent_Info Codec = 0x7b // torrent-info
	// ipld: Torrent file (bencoded)
	Torrent_File Codec = 0x7c // torrent-file
	// ipld: Leofcoin Block
	Leofcoin_Block Codec = 0x81 // leofcoin-block
	// ipld: Leofcoin Transaction
	Leofcoin_Tx Codec = 0x82 // leofcoin-tx
	// ipld: Leofcoin Peer Reputation
	Leofcoin_Pr Codec = 0x83 // leofcoin-pr
	// multiaddr
	Sctp Codec = 0x84 // sctp
	// ipld: MerkleDAG JOSE
	Dag_Jose Codec = 0x85 // dag-jose
	// ipld: MerkleDAG COSE
	Dag_Cose Codec = 0x86 // dag-cose
	// ipld: Ethereum Block (RLP)
	Eth_Block Codec = 0x90 // eth-block
	// ipld: Ethereum Block List (RLP)
	Eth_Block_List Codec = 0x91 // eth-block-list
	// ipld: Ethereum Transaction Trie (Eth-Trie)
	Eth_Tx_Trie Codec = 0x92 // eth-tx-trie
	// ipld: Ethereum Transaction (RLP)
	Eth_Tx Codec = 0x93 // eth-tx
	// ipld: Ethereum Transaction Receipt Trie (Eth-Trie)
	Eth_Tx_Receipt_Trie Codec = 0x94 // eth-tx-receipt-trie
	// ipld: Ethereum Transaction Receipt (RLP)
	Eth_Tx_Receipt Codec = 0x95 // eth-tx-receipt
	// ipld: Ethereum State Trie (Eth-Secure-Trie)
	Eth_State_Trie Codec = 0x96 // eth-state-trie
	// ipld: Ethereum Account Snapshot (RLP)
	Eth_Account_Snapshot Codec = 0x97 // eth-account-snapshot
	// ipld: Ethereum Contract Storage Trie (Eth-Secure-Trie)
	Eth_Storage_Trie Codec = 0x98 // eth-storage-trie
	// ipld: Bitcoin Block
	Bitcoin_Block Codec = 0xb0 // bitcoin-block
	// ipld: Bitcoin Tx
	Bitcoin_Tx Codec = 0xb1 // bitcoin-tx
	// ipld: Bitcoin Witness Commitment
	Bitcoin_Witness_Commitment Codec = 0xb2 // bitcoin-witness-commitment
	// ipld: Zcash Block
	Zcash_Block Codec = 0xc0 // zcash-block
	// ipld: Zcash Tx
	Zcash_Tx Codec = 0xc1 // zcash-tx
	// namespace: Ceramic Document Id
	Docid Codec = 0xce // docid
	// ipld: Stellar Block
	Stellar_Block Codec = 0xd0 // stellar-block
	// ipld: Stellar Tx
	Stellar_Tx Codec = 0xd1 // stellar-tx
	// multihash
	Md4 Codec = 0xd4 // md4
	// multihash
	Md5 Codec = 0xd5 // md5
	// multihash: Binary Merkle Tree Hash
	Bmt Codec = 0xd6 // bmt
	// ipld: Decred Block
	Decred_Block Codec = 0xe0 // decred-block
	// ipld: Decred Tx
	Decred_Tx Codec = 0xe1 // decred-tx
	// namespace: IPLD path
	Ipld_Ns Codec = 0xe2 // ipld-ns
	// namespace: IPFS path
	Ipfs_Ns Codec = 0xe3 // ipfs-ns
	// namespace: Swarm path
	Swarm_Ns Codec = 0xe4 // swarm-ns
	// namespace: IPNS path
	Ipns_Ns Codec = 0xe5 // ipns-ns
	// namespace: ZeroNet site address
	Zeronet Codec = 0xe6 // zeronet
	// key: Secp256k1 public key
	Secp256k1_Pub Codec = 0xe7 // secp256k1-pub
	// key: BLS12-381 public key in the G1 field
	Bls12_381_G1_Pub Codec = 0xea // bls12_381-g1-pub
	// key: BLS12-381 public key in the G2 field
	Bls12_381_G2_Pub Codec = 0xeb // bls12_381-g2-pub
	// key: Curve25519 public key
	X25519_Pub Codec = 0xec // x25519-pub
	// key: Ed25519 public key
	Ed25519_Pub Codec = 0xed // ed25519-pub
	// key: BLS12-381 concatenated public keys in both the G1 and G2 fields
	Bls12_381_G1g2_Pub Codec = 0xee // bls12_381-g1g2-pub
	// ipld: Dash Block
	Dash_Block Codec = 0xf0 // dash-block
	// ipld: Dash Tx
	Dash_Tx Codec = 0xf1 // dash-tx
	// ipld: Swarm Manifest
	Swarm_Manifest Codec = 0xfa // swarm-manifest
	// ipld: Swarm Feed
	Swarm_Feed Codec = 0xfb // swarm-feed
	// multiaddr
	Udp Codec = 0x0111 // udp
	// multiaddr
	P2p_Webrtc_Star Codec = 0x0113 // p2p-webrtc-star
	// multiaddr
	P2p_Webrtc_Direct Codec = 0x0114 // p2p-webrtc-direct
	// multiaddr
	P2p_Stardust Codec = 0x0115 // p2p-stardust
	// multiaddr
	P2p_Circuit Codec = 0x0122 // p2p-circuit
	// ipld: MerkleDAG json
	Dag_Json Codec = 0x0129 // dag-json
	// multiaddr
	Udt Codec = 0x012d // udt
	// multiaddr
	Utp Codec = 0x012e // utp
	// multiaddr
	Unix Codec = 0x0190 // unix
	// multiaddr: libp2p
	P2p Codec = 0x01a5 // p2p
	// Deprecated: multiaddr: libp2p (deprecated)
	Ipfs Codec = 0x01a5 // ipfs
	// multiaddr
	Https Codec = 0x01bb // https
	// multiaddr
	Onion Codec = 0x01bc // onion
	// multiaddr
	Onion3 Codec = 0x01bd // onion3
	// multiaddr: I2P base64 (raw public key)
	Garlic64 Codec = 0x01be // garlic64
	// multiaddr: I2P base32 (hashed public key or encoded public key/checksum+optional secret)
	Garlic32 Codec = 0x01bf // garlic32
	// multiaddr
	Tls Codec = 0x01c0 // tls
	// multiaddr
	Quic Codec = 0x01cc // quic
	// multiaddr
	Ws Codec = 0x01dd // ws
	// multiaddr
	Wss Codec = 0x01de // wss
	// multiaddr
	P2p_Websocket_Star Codec = 0x01df // p2p-websocket-star
	// multiaddr
	Http Codec = 0x01e0 // http
	// serialization: JSON (UTF-8-encoded)
	Json Codec = 0x0200 // json
	// serialization: MessagePack
	Messagepack Codec = 0x0201 // messagepack
	// libp2p: libp2p peer record type
	Libp2p_Peer_Record Codec = 0x0301 // libp2p-peer-record
	// multihash: SHA2-256 with the two most significant bits from the last byte zeroed (as via a mask with 0b00111111) - used for proving trees as in Filecoin
	Sha2_256_Trunc254_Padded Codec = 0x1012 // sha2-256-trunc254-padded
	// multihash
	Ripemd_128 Codec = 0x1052 // ripemd-128
	// multihash
	Ripemd_160 Codec = 0x1053 // ripemd-160
	// multihash
	Ripemd_256 Codec = 0x1054 // ripemd-256
	// multihash
	Ripemd_320 Codec = 0x1055 // ripemd-320
	// multihash
	X11 Codec = 0x1100 // x11
	// key: P-256 public Key
	P256_Pub Codec = 0x1200 // p256-pub
	// key: P-384 public Key
	P384_Pub Codec = 0x1201 // p384-pub
	// key: P-521 public Key
	P521_Pub Codec = 0x1202 // p521-pub
	// key: Ed448 public Key
	Ed448_Pub Codec = 0x1203 // ed448-pub
	// key: X448 public Key
	X448_Pub Codec = 0x1204 // x448-pub
	// key: Ed25519 private key
	Ed25519_Priv Codec = 0x1300 // ed25519-priv
	// multihash: KangarooTwelve is an extendable-output hash function based on Keccak-p
	Kangarootwelve Codec = 0x1d01 // kangarootwelve
	// multihash
	Sm3_256 Codec = 0x534d // sm3-256
	// multihash: Blake2b consists of 64 output lengths that give different hashes
	Blake2b_8 Codec = 0xb201 // blake2b-8
	// multihash
	Blake2b_16 Codec = 0xb202 // blake2b-16
	// multihash
	Blake2b_24 Codec = 0xb203 // blake2b-24
	// multihash
	Blake2b_32 Codec = 0xb204 // blake2b-32
	// multihash
	Blake2b_40 Codec = 0xb205 // blake2b-40
	// multihash
	Blake2b_48 Codec = 0xb206 // blake2b-48
	// multihash
	Blake2b_56 Codec = 0xb207 // blake2b-56
	// multihash
	Blake2b_64 Codec = 0xb208 // blake2b-64
	// multihash
	Blake2b_72 Codec = 0xb209 // blake2b-72
	// multihash
	Blake2b_80 Codec = 0xb20a // blake2b-80
	// multihash
	Blake2b_88 Codec = 0xb20b // blake2b-88
	// multihash
	Blake2b_96 Codec = 0xb20c // blake2b-96
	// multihash
	Blake2b_104 Codec = 0xb20d // blake2b-104
	// multihash
	Blake2b_112 Codec = 0xb20e // blake2b-112
	// multihash
	Blake2b_120 Codec = 0xb20f // blake2b-120
	// multihash
	Blake2b_128 Codec = 0xb210 // blake2b-128
	// multihash
	Blake2b_136 Codec = 0xb211 // blake2b-136
	// multihash
	Blake2b_144 Codec = 0xb212 // blake2b-144
	// multihash
	Blake2b_152 Codec = 0xb213 // blake2b-152
	// multihash
	Blake2b_160 Codec = 0xb214 // blake2b-160
	// multihash
	Blake2b_168 Codec = 0xb215 // blake2b-168
	// multihash
	Blake2b_176 Codec = 0xb216 // blake2b-176
	// multihash
	Blake2b_184 Codec = 0xb217 // blake2b-184
	// multihash
	Blake2b_192 Codec = 0xb218 // blake2b-192
	// multihash
	Blake2b_200 Codec = 0xb219 // blake2b-200
	// multihash
	Blake2b_208 Codec = 0xb21a // blake2b-208
	// multihash
	Blake2b_216 Codec = 0xb21b // blake2b-216
	// multihash
	Blake2b_224 Codec = 0xb21c // blake2b-224
	// multihash
	Blake2b_232 Codec = 0xb21d // blake2b-232
	// multihash
	Blake2b_240 Codec = 0xb21e // blake2b-240
	// multihash
	Blake2b_248 Codec = 0xb21f // blake2b-248
	// multihash
	Blake2b_256 Codec = 0xb220 // blake2b-256
	// multihash
	Blake2b_264 Codec = 0xb221 // blake2b-264
	// multihash
	Blake2b_272 Codec = 0xb222 // blake2b-272
	// multihash
	Blake2b_280 Codec = 0xb223 // blake2b-280
	// multihash
	Blake2b_288 Codec = 0xb224 // blake2b-288
	// multihash
	Blake2b_296 Codec = 0xb225 // blake2b-296
	// multihash
	Blake2b_304 Codec = 0xb226 // blake2b-304
	// multihash
	Blake2b_312 Codec = 0xb227 // blake2b-312
	// multihash
	Blake2b_320 Codec = 0xb228 // blake2b-320
	// multihash
	Blake2b_328 Codec = 0xb229 // blake2b-328
	// multihash
	Blake2b_336 Codec = 0xb22a // blake2b-336
	// multihash
	Blake2b_344 Codec = 0xb22b // blake2b-344
	// multihash
	Blake2b_352 Codec = 0xb22c // blake2b-352
	// multihash
	Blake2b_360 Codec = 0xb22d // blake2b-360
	// multihash
	Blake2b_368 Codec = 0xb22e // blake2b-368
	// multihash
	Blake2b_376 Codec = 0xb22f // blake2b-376
	// multihash
	Blake2b_384 Codec = 0xb230 // blake2b-384
	// multihash
	Blake2b_392 Codec = 0xb231 // blake2b-392
	// multihash
	Blake2b_400 Codec = 0xb232 // blake2b-400
	// multihash
	Blake2b_408 Codec = 0xb233 // blake2b-408
	// multihash
	Blake2b_416 Codec = 0xb234 // blake2b-416
	// multihash
	Blake2b_424 Codec = 0xb235 // blake2b-424
	// multihash
	Blake2b_432 Codec = 0xb236 // blake2b-432
	// multihash
	Blake2b_440 Codec = 0xb237 // blake2b-440
	// multihash
	Blake2b_448 Codec = 0xb238 // blake2b-448
	// multihash
	Blake2b_456 Codec = 0xb239 // blake2b-456
	// multihash
	Blake2b_464 Codec = 0xb23a // blake2b-464
	// multihash
	Blake2b_472 Codec = 0xb23b // blake2b-472
	// multihash
	Blake2b_480 Codec = 0xb23c // blake2b-480
	// multihash
	Blake2b_488 Codec = 0xb23d // blake2b-488
	// multihash
	Blake2b_496 Codec = 0xb23e // blake2b-496
	// multihash
	Blake2b_504 Codec = 0xb23f // blake2b-504
	// multihash
	Blake2b_512 Codec = 0xb240 // blake2b-512
	// multihash: Blake2s consists of 32 output lengths that give different hashes
	Blake2s_8 Codec = 0xb241 // blake2s-8
	// multihash
	Blake2s_16 Codec = 0xb242 // blake2s-16
	// multihash
	Blake2s_24 Codec = 0xb243 // blake2s-24
	// multihash
	Blake2s_32 Codec = 0xb244 // blake2s-32
	// multihash
	Blake2s_40 Codec = 0xb245 // blake2s-40
	// multihash
	Blake2s_48 Codec = 0xb246 // blake2s-48
	// multihash
	Blake2s_56 Codec = 0xb247 // blake2s-56
	// multihash
	Blake2s_64 Codec = 0xb248 // blake2s-64
	// multihash
	Blake2s_72 Codec = 0xb249 // blake2s-72
	// multihash
	Blake2s_80 Codec = 0xb24a // blake2s-80
	// multihash
	Blake2s_88 Codec = 0xb24b // blake2s-88
	// multihash
	Blake2s_96 Codec = 0xb24c // blake2s-96
	// multihash
	Blake2s_104 Codec = 0xb24d // blake2s-104
	// multihash
	Blake2s_112 Codec = 0xb24e // blake2s-112
	// multihash
	Blake2s_120 Codec = 0xb24f // blake2s-120
	// multihash
	Blake2s_128 Codec = 0xb250 // blake2s-128
	// multihash
	Blake2s_136 Codec = 0xb251 // blake2s-136
	// multihash
	Blake2s_144 Codec = 0xb252 // blake2s-144
	// multihash
	Blake2s_152 Codec = 0xb253 // blake2s-152
	// multihash
	Blake2s_160 Codec = 0xb254 // blake2s-160
	// multihash
	Blake2s_168 Codec = 0xb255 // blake2s-168
	// multihash
	Blake2s_176 Codec = 0xb256 // blake2s-176
	// multihash
	Blake2s_184 Codec = 0xb257 // blake2s-184
	// multihash
	Blake2s_192 Codec = 0xb258 // blake2s-192
	// multihash
	Blake2s_200 Codec = 0xb259 // blake2s-200
	// multihash
	Blake2s_208 Codec = 0xb25a // blake2s-208
	// multihash
	Blake2s_216 Codec = 0xb25b // blake2s-216
	// multihash
	Blake2s_224 Codec = 0xb25c // blake2s-224
	// multihash
	Blake2s_232 Codec = 0xb25d // blake2s-232
	// multihash
	Blake2s_240 Codec = 0xb25e // blake2s-240
	// multihash
	Blake2s_248 Codec = 0xb25f // blake2s-248
	// multihash
	Blake2s_256 Codec = 0xb260 // blake2s-256
	// multihash: Skein256 consists of 32 output lengths that give different hashes
	Skein256_8 Codec = 0xb301 // skein256-8
	// multihash
	Skein256_16 Codec = 0xb302 // skein256-16
	// multihash
	Skein256_24 Codec = 0xb303 // skein256-24
	// multihash
	Skein256_32 Codec = 0xb304 // skein256-32
	// multihash
	Skein256_40 Codec = 0xb305 // skein256-40
	// multihash
	Skein256_48 Codec = 0xb306 // skein256-48
	// multihash
	Skein256_56 Codec = 0xb307 // skein256-56
	// multihash
	Skein256_64 Codec = 0xb308 // skein256-64
	// multihash
	Skein256_72 Codec = 0xb309 // skein256-72
	// multihash
	Skein256_80 Codec = 0xb30a // skein256-80
	// multihash
	Skein256_88 Codec = 0xb30b // skein256-88
	// multihash
	Skein256_96 Codec = 0xb30c // skein256-96
	// multihash
	Skein256_104 Codec = 0xb30d // skein256-104
	// multihash
	Skein256_112 Codec = 0xb30e // skein256-112
	// multihash
	Skein256_120 Codec = 0xb30f // skein256-120
	// multihash
	Skein256_128 Codec = 0xb310 // skein256-128
	// multihash
	Skein256_136 Codec = 0xb311 // skein256-136
	// multihash
	Skein256_144 Codec = 0xb312 // skein256-144
	// multihash
	Skein256_152 Codec = 0xb313 // skein256-152
	// multihash
	Skein256_160 Codec = 0xb314 // skein256-160
	// multihash
	Skein256_168 Codec = 0xb315 // skein256-168
	// multihash
	Skein256_176 Codec = 0xb316 // skein256-176
	// multihash
	Skein256_184 Codec = 0xb317 // skein256-184
	// multihash
	Skein256_192 Codec = 0xb318 // skein256-192
	// multihash
	Skein256_200 Codec = 0xb319 // skein256-200
	// multihash
	Skein256_208 Codec = 0xb31a // skein256-208
	// multihash
	Skein256_216 Codec = 0xb31b // skein256-216
	// multihash
	Skein256_224 Codec = 0xb31c // skein256-224
	// multihash
	Skein256_232 Codec = 0xb31d // skein256-232
	// multihash
	Skein256_240 Codec = 0xb31e // skein256-240
	// multihash
	Skein256_248 Codec = 0xb31f // skein256-248
	// multihash
	Skein256_256 Codec = 0xb320 // skein256-256
	// multihash: Skein512 consists of 64 output lengths that give different hashes
	Skein512_8 Codec = 0xb321 // skein512-8
	// multihash
	Skein512_16 Codec = 0xb322 // skein512-16
	// multihash
	Skein512_24 Codec = 0xb323 // skein512-24
	// multihash
	Skein512_32 Codec = 0xb324 // skein512-32
	// multihash
	Skein512_40 Codec = 0xb325 // skein512-40
	// multihash
	Skein512_48 Codec = 0xb326 // skein512-48
	// multihash
	Skein512_56 Codec = 0xb327 // skein512-56
	// multihash
	Skein512_64 Codec = 0xb328 // skein512-64
	// multihash
	Skein512_72 Codec = 0xb329 // skein512-72
	// multihash
	Skein512_80 Codec = 0xb32a // skein512-80
	// multihash
	Skein512_88 Codec = 0xb32b // skein512-88
	// multihash
	Skein512_96 Codec = 0xb32c // skein512-96
	// multihash
	Skein512_104 Codec = 0xb32d // skein512-104
	// multihash
	Skein512_112 Codec = 0xb32e // skein512-112
	// multihash
	Skein512_120 Codec = 0xb32f // skein512-120
	// multihash
	Skein512_128 Codec = 0xb330 // skein512-128
	// multihash
	Skein512_136 Codec = 0xb331 // skein512-136
	// multihash
	Skein512_144 Codec = 0xb332 // skein512-144
	// multihash
	Skein512_152 Codec = 0xb333 // skein512-152
	// multihash
	Skein512_160 Codec = 0xb334 // skein512-160
	// multihash
	Skein512_168 Codec = 0xb335 // skein512-168
	// multihash
	Skein512_176 Codec = 0xb336 // skein512-176
	// multihash
	Skein512_184 Codec = 0xb337 // skein512-184
	// multihash
	Skein512_192 Codec = 0xb338 // skein512-192
	// multihash
	Skein512_200 Codec = 0xb339 // skein512-200
	// multihash
	Skein512_208 Codec = 0xb33a // skein512-208
	// multihash
	Skein512_216 Codec = 0xb33b // skein512-216
	// multihash
	Skein512_224 Codec = 0xb33c // skein512-224
	// multihash
	Skein512_232 Codec = 0xb33d // skein512-232
	// multihash
	Skein512_240 Codec = 0xb33e // skein512-240
	// multihash
	Skein512_248 Codec = 0xb33f // skein512-248
	// multihash
	Skein512_256 Codec = 0xb340 // skein512-256
	// multihash
	Skein512_264 Codec = 0xb341 // skein512-264
	// multihash
	Skein512_272 Codec = 0xb342 // skein512-272
	// multihash
	Skein512_280 Codec = 0xb343 // skein512-280
	// multihash
	Skein512_288 Codec = 0xb344 // skein512-288
	// multihash
	Skein512_296 Codec = 0xb345 // skein512-296
	// multihash
	Skein512_304 Codec = 0xb346 // skein512-304
	// multihash
	Skein512_312 Codec = 0xb347 // skein512-312
	// multihash
	Skein512_320 Codec = 0xb348 // skein512-320
	// multihash
	Skein512_328 Codec = 0xb349 // skein512-328
	// multihash
	Skein512_336 Codec = 0xb34a // skein512-336
	// multihash
	Skein512_344 Codec = 0xb34b // skein512-344
	// multihash
	Skein512_352 Codec = 0xb34c // skein512-352
	// multihash
	Skein512_360 Codec = 0xb34d // skein512-360
	// multihash
	Skein512_368 Codec = 0xb34e // skein512-368
	// multihash
	Skein512_376 Codec = 0xb34f // skein512-376
	// multihash
	Skein512_384 Codec = 0xb350 // skein512-384
	// multihash
	Skein512_392 Codec = 0xb351 // skein512-392
	// multihash
	Skein512_400 Codec = 0xb352 // skein512-400
	// multihash
	Skein512_408 Codec = 0xb353 // skein512-408
	// multihash
	Skein512_416 Codec = 0xb354 // skein512-416
	// multihash
	Skein512_424 Codec = 0xb355 // skein512-424
	// multihash
	Skein512_432 Codec = 0xb356 // skein512-432
	// multihash
	Skein512_440 Codec = 0xb357 // skein512-440
	// multihash
	Skein512_448 Codec = 0xb358 // skein512-448
	// multihash
	Skein512_456 Codec = 0xb359 // skein512-456
	// multihash
	Skein512_464 Codec = 0xb35a // skein512-464
	// multihash
	Skein512_472 Codec = 0xb35b // skein512-472
	// multihash
	Skein512_480 Codec = 0xb35c // skein512-480
	// multihash
	Skein512_488 Codec = 0xb35d // skein512-488
	// multihash
	Skein512_496 Codec = 0xb35e // skein512-496
	// multihash
	Skein512_504 Codec = 0xb35f // skein512-504
	// multihash
	Skein512_512 Codec = 0xb360 // skein512-512
	// multihash: Skein1024 consists of 128 output lengths that give different hashes
	Skein1024_8 Codec = 0xb361 // skein1024-8
	// multihash
	Skein1024_16 Codec = 0xb362 // skein1024-16
	// multihash
	Skein1024_24 Codec = 0xb363 // skein1024-24
	// multihash
	Skein1024_32 Codec = 0xb364 // skein1024-32
	// multihash
	Skein1024_40 Codec = 0xb365 // skein1024-40
	// multihash
	Skein1024_48 Codec = 0xb366 // skein1024-48
	// multihash
	Skein1024_56 Codec = 0xb367 // skein1024-56
	// multihash
	Skein1024_64 Codec = 0xb368 // skein1024-64
	// multihash
	Skein1024_72 Codec = 0xb369 // skein1024-72
	// multihash
	Skein1024_80 Codec = 0xb36a // skein1024-80
	// multihash
	Skein1024_88 Codec = 0xb36b // skein1024-88
	// multihash
	Skein1024_96 Codec = 0xb36c // skein1024-96
	// multihash
	Skein1024_104 Codec = 0xb36d // skein1024-104
	// multihash
	Skein1024_112 Codec = 0xb36e // skein1024-112
	// multihash
	Skein1024_120 Codec = 0xb36f // skein1024-120
	// multihash
	Skein1024_128 Codec = 0xb370 // skein1024-128
	// multihash
	Skein1024_136 Codec = 0xb371 // skein1024-136
	// multihash
	Skein1024_144 Codec = 0xb372 // skein1024-144
	// multihash
	Skein1024_152 Codec = 0xb373 // skein1024-152
	// multihash
	Skein1024_160 Codec = 0xb374 // skein1024-160
	// multihash
	Skein1024_168 Codec = 0xb375 // skein1024-168
	// multihash
	Skein1024_176 Codec = 0xb376 // skein1024-176
	// multihash
	Skein1024_184 Codec = 0xb377 // skein1024-184
	// multihash
	Skein1024_192 Codec = 0xb378 // skein1024-192
	// multihash
	Skein1024_200 Codec = 0xb379 // skein1024-200
	// multihash
	Skein1024_208 Codec = 0xb37a // skein1024-208
	// multihash
	Skein1024_216 Codec = 0xb37b // skein1024-216
	// multihash
	Skein1024_224 Codec = 0xb37c // skein1024-224
	// multihash
	Skein1024_232 Codec = 0xb37d // skein1024-232
	// multihash
	Skein1024_240 Codec = 0xb37e // skein1024-240
	// multihash
	Skein1024_248 Codec = 0xb37f // skein1024-248
	// multihash
	Skein1024_256 Codec = 0xb380 // skein1024-256
	// multihash
	Skein1024_264 Codec = 0xb381 // skein1024-264
	// multihash
	Skein1024_272 Codec = 0xb382 // skein1024-272
	// multihash
	Skein1024_280 Codec = 0xb383 // skein1024-280
	// multihash
	Skein1024_288 Codec = 0xb384 // skein1024-288
	// multihash
	Skein1024_296 Codec = 0xb385 // skein1024-296
	// multihash
	Skein1024_304 Codec = 0xb386 // skein1024-304
	// multihash
	Skein1024_312 Codec = 0xb387 // skein1024-312
	// multihash
	Skein1024_320 Codec = 0xb388 // skein1024-320
	// multihash
	Skein1024_328 Codec = 0xb389 // skein1024-328
	// multihash
	Skein1024_336 Codec = 0xb38a // skein1024-336
	// multihash
	Skein1024_344 Codec = 0xb38b // skein1024-344
	// multihash
	Skein1024_352 Codec = 0xb38c // skein1024-352
	// multihash
	Skein1024_360 Codec = 0xb38d // skein1024-360
	// multihash
	Skein1024_368 Codec = 0xb38e // skein1024-368
	// multihash
	Skein1024_376 Codec = 0xb38f // skein1024-376
	// multihash
	Skein1024_384 Codec = 0xb390 // skein1024-384
	// multihash
	Skein1024_392 Codec = 0xb391 // skein1024-392
	// multihash
	Skein1024_400 Codec = 0xb392 // skein1024-400
	// multihash
	Skein1024_408 Codec = 0xb393 // skein1024-408
	// multihash
	Skein1024_416 Codec = 0xb394 // skein1024-416
	// multihash
	Skein1024_424 Codec = 0xb395 // skein1024-424
	// multihash
	Skein1024_432 Codec = 0xb396 // skein1024-432
	// multihash
	Skein1024_440 Codec = 0xb397 // skein1024-440
	// multihash
	Skein1024_448 Codec = 0xb398 // skein1024-448
	// multihash
	Skein1024_456 Codec = 0xb399 // skein1024-456
	// multihash
	Skein1024_464 Codec = 0xb39a // skein1024-464
	// multihash
	Skein1024_472 Codec = 0xb39b // skein1024-472
	// multihash
	Skein1024_480 Codec = 0xb39c // skein1024-480
	// multihash
	Skein1024_488 Codec = 0xb39d // skein1024-488
	// multihash
	Skein1024_496 Codec = 0xb39e // skein1024-496
	// multihash
	Skein1024_504 Codec = 0xb39f // skein1024-504
	// multihash
	Skein1024_512 Codec = 0xb3a0 // skein1024-512
	// multihash
	Skein1024_520 Codec = 0xb3a1 // skein1024-520
	// multihash
	Skein1024_528 Codec = 0xb3a2 // skein1024-528
	// multihash
	Skein1024_536 Codec = 0xb3a3 // skein1024-536
	// multihash
	Skein1024_544 Codec = 0xb3a4 // skein1024-544
	// multihash
	Skein1024_552 Codec = 0xb3a5 // skein1024-552
	// multihash
	Skein1024_560 Codec = 0xb3a6 // skein1024-560
	// multihash
	Skein1024_568 Codec = 0xb3a7 // skein1024-568
	// multihash
	Skein1024_576 Codec = 0xb3a8 // skein1024-576
	// multihash
	Skein1024_584 Codec = 0xb3a9 // skein1024-584
	// multihash
	Skein1024_592 Codec = 0xb3aa // skein1024-592
	// multihash
	Skein1024_600 Codec = 0xb3ab // skein1024-600
	// multihash
	Skein1024_608 Codec = 0xb3ac // skein1024-608
	// multihash
	Skein1024_616 Codec = 0xb3ad // skein1024-616
	// multihash
	Skein1024_624 Codec = 0xb3ae // skein1024-624
	// multihash
	Skein1024_632 Codec = 0xb3af // skein1024-632
	// multihash
	Skein1024_640 Codec = 0xb3b0 // skein1024-640
	// multihash
	Skein1024_648 Codec = 0xb3b1 // skein1024-648
	// multihash
	Skein1024_656 Codec = 0xb3b2 // skein1024-656
	// multihash
	Skein1024_664 Codec = 0xb3b3 // skein1024-664
	// multihash
	Skein1024_672 Codec = 0xb3b4 // skein1024-672
	// multihash
	Skein1024_680 Codec = 0xb3b5 // skein1024-680
	// multihash
	Skein1024_688 Codec = 0xb3b6 // skein1024-688
	// multihash
	Skein1024_696 Codec = 0xb3b7 // skein1024-696
	// multihash
	Skein1024_704 Codec = 0xb3b8 // skein1024-704
	// multihash
	Skein1024_712 Codec = 0xb3b9 // skein1024-712
	// multihash
	Skein1024_720 Codec = 0xb3ba // skein1024-720
	// multihash
	Skein1024_728 Codec = 0xb3bb // skein1024-728
	// multihash
	Skein1024_736 Codec = 0xb3bc // skein1024-736
	// multihash
	Skein1024_744 Codec = 0xb3bd // skein1024-744
	// multihash
	Skein1024_752 Codec = 0xb3be // skein1024-752
	// multihash
	Skein1024_760 Codec = 0xb3bf // skein1024-760
	// multihash
	Skein1024_768 Codec = 0xb3c0 // skein1024-768
	// multihash
	Skein1024_776 Codec = 0xb3c1 // skein1024-776
	// multihash
	Skein1024_784 Codec = 0xb3c2 // skein1024-784
	// multihash
	Skein1024_792 Codec = 0xb3c3 // skein1024-792
	// multihash
	Skein1024_800 Codec = 0xb3c4 // skein1024-800
	// multihash
	Skein1024_808 Codec = 0xb3c5 // skein1024-808
	// multihash
	Skein1024_816 Codec = 0xb3c6 // skein1024-816
	// multihash
	Skein1024_824 Codec = 0xb3c7 // skein1024-824
	// multihash
	Skein1024_832 Codec = 0xb3c8 // skein1024-832
	// multihash
	Skein1024_840 Codec = 0xb3c9 // skein1024-840
	// multihash
	Skein1024_848 Codec = 0xb3ca // skein1024-848
	// multihash
	Skein1024_856 Codec = 0xb3cb // skein1024-856
	// multihash
	Skein1024_864 Codec = 0xb3cc // skein1024-864
	// multihash
	Skein1024_872 Codec = 0xb3cd // skein1024-872
	// multihash
	Skein1024_880 Codec = 0xb3ce // skein1024-880
	// multihash
	Skein1024_888 Codec = 0xb3cf // skein1024-888
	// multihash
	Skein1024_896 Codec = 0xb3d0 // skein1024-896
	// multihash
	Skein1024_904 Codec = 0xb3d1 // skein1024-904
	// multihash
	Skein1024_912 Codec = 0xb3d2 // skein1024-912
	// multihash
	Skein1024_920 Codec = 0xb3d3 // skein1024-920
	// multihash
	Skein1024_928 Codec = 0xb3d4 // skein1024-928
	// multihash
	Skein1024_936 Codec = 0xb3d5 // skein1024-936
	// multihash
	Skein1024_944 Codec = 0xb3d6 // skein1024-944
	// multihash
	Skein1024_952 Codec = 0xb3d7 // skein1024-952
	// multihash
	Skein1024_960 Codec = 0xb3d8 // skein1024-960
	// multihash
	Skein1024_968 Codec = 0xb3d9 // skein1024-968
	// multihash
	Skein1024_976 Codec = 0xb3da // skein1024-976
	// multihash
	Skein1024_984 Codec = 0xb3db // skein1024-984
	// multihash
	Skein1024_992 Codec = 0xb3dc // skein1024-992
	// multihash
	Skein1024_1000 Codec = 0xb3dd // skein1024-1000
	// multihash
	Skein1024_1008 Codec = 0xb3de // skein1024-1008
	// multihash
	Skein1024_1016 Codec = 0xb3df // skein1024-1016
	// multihash
	Skein1024_1024 Codec = 0xb3e0 // skein1024-1024
	// multihash: Poseidon using BLS12-381 and arity of 2 with Filecoin parameters
	Poseidon_Bls12_381_A2_Fc1 Codec = 0xb401 // poseidon-bls12_381-a2-fc1
	// multihash: Poseidon using BLS12-381 and arity of 2 with Filecoin parameters - high-security variant
	Poseidon_Bls12_381_A2_Fc1_Sc Codec = 0xb402 // poseidon-bls12_381-a2-fc1-sc
	// zeroxcert: 0xcert Asset Imprint (root hash)
	Zeroxcert_Imprint_256 Codec = 0xce11 // zeroxcert-imprint-256
	// filecoin: Filecoin piece or sector data commitment merkle node/root (CommP & CommD)
	Fil_Commitment_Unsealed Codec = 0xf101 // fil-commitment-unsealed
	// filecoin: Filecoin sector data commitment merkle node/root - sealed and replicated (CommR)
	Fil_Commitment_Sealed Codec = 0xf102 // fil-commitment-sealed
	// holochain: Holochain v0 address    + 8 R-S (63 x Base-32)
	Holochain_Adr_V0 Codec = 0x807124 // holochain-adr-v0
	// holochain: Holochain v1 address    + 8 R-S (63 x Base-32)
	Holochain_Adr_V1 Codec = 0x817124 // holochain-adr-v1
	// holochain: Holochain v0 public key + 8 R-S (63 x Base-32)
	Holochain_Key_V0 Codec = 0x947124 // holochain-key-v0
	// holochain: Holochain v1 public key + 8 R-S (63 x Base-32)
	Holochain_Key_V1 Codec = 0x957124 // holochain-key-v1
	// holochain: Holochain v0 signature  + 8 R-S (63 x Base-32)
	Holochain_Sig_V0 Codec = 0xa27124 // holochain-sig-v0
	// holochain: Holochain v1 signature  + 8 R-S (63 x Base-32)
	Holochain_Sig_V1 Codec = 0xa37124 // holochain-sig-v1
)
